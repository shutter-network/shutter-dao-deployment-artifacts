{
  "address": "0x93a2b17a942D57f8e3E8E6338615a8657691e02C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AddrsSeq",
          "name": "_addrsSeq",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "activationBlockNumber",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "collatorSetIndex",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "collatorConfigIndex",
          "type": "uint64"
        }
      ],
      "name": "NewConfig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "activationBlockNumber",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "setIndex",
              "type": "uint64"
            }
          ],
          "internalType": "struct CollatorConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "addNewCfg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addrsSeq",
      "outputs": [
        {
          "internalType": "contract AddrsSeq",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collatorConfigs",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "activationBlockNumber",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "setIndex",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "activationBlockNumber",
          "type": "uint64"
        }
      ],
      "name": "getActiveConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "activationBlockNumber",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "setIndex",
              "type": "uint64"
            }
          ],
          "internalType": "struct CollatorConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x52d61c5de0789a0be8cbda0b982e19294e5f021133ce1f1231049ab8728ec6a1",
  "receipt": {
    "to": null,
    "from": "0x6Db3b32Bd7cD9cd06eC23A9Ba11393C8DE0425C6",
    "contractAddress": "0x93a2b17a942D57f8e3E8E6338615a8657691e02C",
    "transactionIndex": 181,
    "gasUsed": "1003693",
    "logsBloom": "0x
    "blockHash": "0x6ba254fae589de9b2a141155d48c387b8c108378f66c4b452ad723160c56c4a0",
    "transactionHash": "0x52d61c5de0789a0be8cbda0b982e19294e5f021133ce1f1231049ab8728ec6a1",
    "logs": [
      {
        "transactionIndex": 181,
        "blockNumber": 19021405,
        "transactionHash": "0x52d61c5de0789a0be8cbda0b982e19294e5f021133ce1f1231049ab8728ec6a1",
        "address": "0x93a2b17a942D57f8e3E8E6338615a8657691e02C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006db3b32bd7cd9cd06ec23a9ba11393c8de0425c6"
        ],
        "data": "0x",
        "logIndex": 241,
        "blockHash": "0x6ba254fae589de9b2a141155d48c387b8c108378f66c4b452ad723160c56c4a0"
      },
      {
        "transactionIndex": 181,
        "blockNumber": 19021405,
        "transactionHash": "0x52d61c5de0789a0be8cbda0b982e19294e5f021133ce1f1231049ab8728ec6a1",
        "address": "0x93a2b17a942D57f8e3E8E6338615a8657691e02C",
        "topics": [
          "0xf1c5613227525376c83485d5a7995987dcfcd90512b0de33df550d2469fba9d9"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 242,
        "blockHash": "0x6ba254fae589de9b2a141155d48c387b8c108378f66c4b452ad723160c56c4a0"
      }
    ],
    "blockNumber": 19021405,
    "cumulativeGasUsed": "10538754",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x159481E8A78A61a47815b95DEaFc60023Fc4f829"
  ],
  "numDeployments": 1,
  "solcInputHash": "e2d6d0ee9cfeab87733f4cc6bcb4889b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AddrsSeq\",\"name\":\"_addrsSeq\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"activationBlockNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"collatorSetIndex\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"collatorConfigIndex\",\"type\":\"uint64\"}],\"name\":\"NewConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"activationBlockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"setIndex\",\"type\":\"uint64\"}],\"internalType\":\"struct CollatorConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"addNewCfg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addrsSeq\",\"outputs\":[{\"internalType\":\"contract AddrsSeq\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collatorConfigs\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"activationBlockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"setIndex\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"activationBlockNumber\",\"type\":\"uint64\"}],\"name\":\"getActiveConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"activationBlockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"setIndex\",\"type\":\"uint64\"}],\"internalType\":\"struct CollatorConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/keyperset/CollatorConfigsList.sol\":\"CollatorConfigsList\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\"},\"contracts/keyperset/AddrsSeq.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.22 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nstruct AddrSet {\\n    address[] addrs;\\n}\\n\\n/**\\n@title AddrsSeq manages a sequence of a list of addresses\\n\\n@dev This sequence of addresses is used to store the list of keypers or the single collator at\\ndifferent points in time. Contrary to what we've done in main chain shutter, we just store the list\\nof addresses here without any information about its validity period. A single list can be\\nreferenced by its index. New lists can be created by calling `add` multiple times and appended with\\na final call to `append`.\\n*/\\ncontract AddrsSeq is Ownable {\\n    event Added(uint64 n, uint64 i, address[] newAddrs);\\n    event Appended(uint64 n);\\n    AddrSet[] private seq;\\n\\n    constructor() Ownable(msg.sender) {\\n        _pushEmptyList();\\n    }\\n\\n    function _pushEmptyList() internal {\\n        seq.push(AddrSet({addrs: new address[](0)}));\\n    }\\n\\n    /**\\n       @notice add adds new addresses to the current list of addresses. This list can be appended\\n       to the sequence of lists by calling `append`.\\n     */\\n    function add(address[] calldata newAddrs) public onlyOwner {\\n        uint64 n = uint64(seq.length - 1);\\n        uint64 i = uint64(seq[n].addrs.length);\\n\\n        for (uint64 j = 0; j < newAddrs.length; j++) {\\n            seq[n].addrs.push(newAddrs[j]);\\n        }\\n\\n        emit Added({n: n, i: i, newAddrs: newAddrs});\\n    }\\n\\n    /**\\n       @notice count returns the number of appended lists\\n     */\\n    function count() public view returns (uint64) {\\n        return uint64(seq.length) - 1;\\n    }\\n\\n    /**\\n     @notice countNth returns the number of addresses stored in the list at index n\\n    */\\n    function countNth(uint64 n) public view returns (uint64) {\\n        require(n < count(), \\\"AddrsSeq.countNth: n out of range\\\");\\n        return uint64(seq[n].addrs.length);\\n    }\\n\\n    /**\\n       @notice append appends the current list of addresses added with add to the sequence.\\n     */\\n    function append() public onlyOwner {\\n        require(\\n            seq.length < type(uint64).max - 1,\\n            \\\"AddrsSeq.append: seq exceeeds limit\\\"\\n        );\\n        emit Appended(uint64(seq.length) - 1);\\n        _pushEmptyList();\\n    }\\n\\n    /**\\n       @notice at returns the address at index i of the list at index n\\n     */\\n    function at(uint64 n, uint64 i) public view returns (address) {\\n        require(n < count(), \\\"AddrsSeq.at: n out of range\\\");\\n        require(i < seq[n].addrs.length, \\\"AddrsSeq.at: i out of range\\\");\\n        return seq[n].addrs[i];\\n    }\\n}\\n\",\"keccak256\":\"0x7af0114e4bdfe30cbdb9fd07881cc14dcbf07befd833eeb6e18a935de3c7f375\",\"license\":\"MIT\"},\"contracts/keyperset/CollatorConfigsList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.22 <0.9.0;\\n\\nimport \\\"./AddrsSeq.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nstruct CollatorConfig {\\n    uint64 activationBlockNumber;\\n    uint64 setIndex;\\n}\\n\\ncontract CollatorConfigsList is Ownable {\\n    CollatorConfig[] public collatorConfigs;\\n    AddrsSeq public addrsSeq;\\n\\n    event NewConfig(\\n        uint64 activationBlockNumber,\\n        uint64 collatorSetIndex,\\n        uint64 collatorConfigIndex\\n    );\\n\\n    constructor(AddrsSeq _addrsSeq) Ownable(msg.sender) {\\n        addrsSeq = _addrsSeq;\\n        require(\\n            addrsSeq.countNth(0) == 0,\\n            \\\"AddrsSeq must have empty list at index 0\\\"\\n        );\\n        collatorConfigs.push(\\n            CollatorConfig({activationBlockNumber: 0, setIndex: 0})\\n        );\\n        emit NewConfig({\\n            activationBlockNumber: 0,\\n            collatorSetIndex: 0,\\n            collatorConfigIndex: 0\\n        });\\n    }\\n\\n    function addNewCfg(CollatorConfig calldata config) public onlyOwner {\\n        require(\\n            addrsSeq.count() > config.setIndex,\\n            \\\"No appended set in seq corresponding to config's set index\\\"\\n        );\\n        require(\\n            collatorConfigs[collatorConfigs.length - 1].activationBlockNumber <=\\n                config.activationBlockNumber,\\n            \\\"Cannot add new set with lower block number than previous\\\"\\n        );\\n\\n        collatorConfigs.push(config);\\n        emit NewConfig({\\n            activationBlockNumber: config.activationBlockNumber,\\n            collatorSetIndex: config.setIndex,\\n            collatorConfigIndex: uint64(collatorConfigs.length) - 1\\n        });\\n    }\\n\\n    function getActiveConfig(\\n        uint64 activationBlockNumber\\n    ) public view returns (CollatorConfig memory) {\\n        for (uint256 i = collatorConfigs.length - 1; true; i--) {\\n            if (\\n                collatorConfigs[i].activationBlockNumber <=\\n                activationBlockNumber\\n            ) {\\n                return collatorConfigs[i];\\n            }\\n        }\\n        revert(\\\"unreachable\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x554d553551dca93edfc62eecfe5b14dddd6f69f0f924cccb86356ddc0f192a4f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620015b7380380620015b783398181016040528101906200003791906200042b565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200046e565b60405180910390fd5b620000be81620002e960201b60201c565b5080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a2d01f860006040518263ffffffff1660e01b8152600401620001609190620004ec565b602060405180830381865afa1580156200017e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001a491906200053a565b67ffffffffffffffff1614620001f1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e890620005f3565b60405180910390fd5b60016040518060400160405280600067ffffffffffffffff168152602001600067ffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050507ff1c5613227525376c83485d5a7995987dcfcd90512b0de33df550d2469fba9d96000806000604051620002da9392919062000615565b60405180910390a15062000652565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003df82620003b2565b9050919050565b6000620003f382620003d2565b9050919050565b6200040581620003e6565b81146200041157600080fd5b50565b6000815190506200042581620003fa565b92915050565b600060208284031215620004445762000443620003ad565b5b6000620004548482850162000414565b91505092915050565b6200046881620003d2565b82525050565b60006020820190506200048560008301846200045d565b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000620004d4620004ce620004c8846200048b565b620004a9565b62000495565b9050919050565b620004e681620004b3565b82525050565b6000602082019050620005036000830184620004db565b92915050565b620005148162000495565b81146200052057600080fd5b50565b600081519050620005348162000509565b92915050565b600060208284031215620005535762000552620003ad565b5b6000620005638482850162000523565b91505092915050565b600082825260208201905092915050565b7f4164647273536571206d757374206861766520656d707479206c69737420617460008201527f20696e6465782030000000000000000000000000000000000000000000000000602082015250565b6000620005db6028836200056c565b9150620005e8826200057d565b604082019050919050565b600060208201905081810360008301526200060e81620005cc565b9050919050565b60006060820190506200062c6000830186620004db565b6200063b6020830185620004db565b6200064a6040830184620004db565b949350505050565b610f5580620006626000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806379f780991161005b57806379f78099146100db5780638da5cb5b146100f7578063b5351b0d14610115578063f2fde38b146101455761007d565b80634d89eaaf14610082578063715018a6146100a057806377e18fc4146100aa575b600080fd5b61008a610161565b6040516100979190610855565b60405180910390f35b6100a8610187565b005b6100c460048036038101906100bf91906108ab565b61019b565b6040516100d29291906108fb565b60405180910390f35b6100f560048036038101906100f09190610948565b6101f3565b005b6100ff610448565b60405161010c9190610996565b60405180910390f35b61012f600480360381019061012a91906109dd565b610471565b60405161013c9190610a48565b60405180910390f35b61015f600480360381019061015a9190610a8f565b6105cf565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018f610655565b61019960006106dc565b565b600181815481106101ab57600080fd5b906000526020600020016000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16905082565b6101fb610655565b80602001602081019061020e91906109dd565b67ffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610ad1565b67ffffffffffffffff16116102f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ea90610b81565b60405180910390fd5b80600001602081019061030691906109dd565b67ffffffffffffffff1660018080805490506103229190610bd0565b8154811061033357610332610c04565b5b9060005260206000200160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790610ca5565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190915081816103d49190610e09565b50507ff1c5613227525376c83485d5a7995987dcfcd90512b0de33df550d2469fba9d981600001602081019061040a91906109dd565b82602001602081019061041d91906109dd565b6001808054905061042e9190610e17565b60405161043d93929190610e53565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104796107a8565b60006001808054905061048c9190610bd0565b90505b60011561058e578267ffffffffffffffff16600182815481106104b5576104b4610c04565b5b9060005260206000200160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161057b57600181815481106104fa576104f9610c04565b5b906000526020600020016040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150506105ca565b808061058690610e8a565b91505061048f565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190610eff565b60405180910390fd5b919050565b6105d7610655565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106495760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106409190610996565b60405180910390fd5b610652816106dc565b50565b61065d6107a0565b73ffffffffffffffffffffffffffffffffffffffff1661067b610448565b73ffffffffffffffffffffffffffffffffffffffff16146106da5761069e6107a0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106d19190610996565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060400160405280600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061081b610816610811846107d6565b6107f6565b6107d6565b9050919050565b600061082d82610800565b9050919050565b600061083f82610822565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b600080fd5b6000819050919050565b61088881610875565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000602082840312156108c1576108c0610870565b5b60006108cf84828501610896565b91505092915050565b600067ffffffffffffffff82169050919050565b6108f5816108d8565b82525050565b600060408201905061091060008301856108ec565b61091d60208301846108ec565b9392505050565b600080fd5b60006040828403121561093f5761093e610924565b5b81905092915050565b60006040828403121561095e5761095d610870565b5b600061096c84828501610929565b91505092915050565b6000610980826107d6565b9050919050565b61099081610975565b82525050565b60006020820190506109ab6000830184610987565b92915050565b6109ba816108d8565b81146109c557600080fd5b50565b6000813590506109d7816109b1565b92915050565b6000602082840312156109f3576109f2610870565b5b6000610a01848285016109c8565b91505092915050565b610a13816108d8565b82525050565b604082016000820151610a2f6000850182610a0a565b506020820151610a426020850182610a0a565b50505050565b6000604082019050610a5d6000830184610a19565b92915050565b610a6c81610975565b8114610a7757600080fd5b50565b600081359050610a8981610a63565b92915050565b600060208284031215610aa557610aa4610870565b5b6000610ab384828501610a7a565b91505092915050565b600081519050610acb816109b1565b92915050565b600060208284031215610ae757610ae6610870565b5b6000610af584828501610abc565b91505092915050565b600082825260208201905092915050565b7f4e6f20617070656e6465642073657420696e2073657120636f72726573706f6e60008201527f64696e6720746f20636f6e66696727732073657420696e646578000000000000602082015250565b6000610b6b603a83610afe565b9150610b7682610b0f565b604082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bdb82610875565b9150610be683610875565b9250828203905081811115610bfe57610bfd610ba1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43616e6e6f7420616464206e6577207365742077697468206c6f77657220626c60008201527f6f636b206e756d626572207468616e2070726576696f75730000000000000000602082015250565b6000610c8f603883610afe565b9150610c9a82610c33565b604082019050919050565b60006020820190508181036000830152610cbe81610c82565b9050919050565b60008135610cd2816109b1565b80915050919050565b60008160001b9050919050565b600067ffffffffffffffff610cfc84610cdb565b9350801983169250808416831791505092915050565b6000610d2d610d28610d23846108d8565b6107f6565b6108d8565b9050919050565b6000819050919050565b610d4782610d12565b610d5a610d5382610d34565b8354610ce8565b8255505050565b60008160401b9050919050565b60006fffffffffffffffff0000000000000000610d8a84610d61565b9350801983169250808416831791505092915050565b610da982610d12565b610dbc610db582610d34565b8354610d6e565b8255505050565b600081016000830180610dd581610cc5565b9050610de18184610d3e565b505050600081016020830180610df681610cc5565b9050610e028184610da0565b5050505050565b610e138282610dc3565b5050565b6000610e22826108d8565b9150610e2d836108d8565b9250828203905067ffffffffffffffff811115610e4d57610e4c610ba1565b5b92915050565b6000606082019050610e6860008301866108ec565b610e7560208301856108ec565b610e8260408301846108ec565b949350505050565b6000610e9582610875565b915060008203610ea857610ea7610ba1565b5b600182039050919050565b7f756e726561636861626c65000000000000000000000000000000000000000000600082015250565b6000610ee9600b83610afe565b9150610ef482610eb3565b602082019050919050565b60006020820190508181036000830152610f1881610edc565b905091905056fea2646970667358221220bd78209a7ca8b548d961b210ca06233244ac6696a96b1b6ea1da117e7f8e60f164736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806379f780991161005b57806379f78099146100db5780638da5cb5b146100f7578063b5351b0d14610115578063f2fde38b146101455761007d565b80634d89eaaf14610082578063715018a6146100a057806377e18fc4146100aa575b600080fd5b61008a610161565b6040516100979190610855565b60405180910390f35b6100a8610187565b005b6100c460048036038101906100bf91906108ab565b61019b565b6040516100d29291906108fb565b60405180910390f35b6100f560048036038101906100f09190610948565b6101f3565b005b6100ff610448565b60405161010c9190610996565b60405180910390f35b61012f600480360381019061012a91906109dd565b610471565b60405161013c9190610a48565b60405180910390f35b61015f600480360381019061015a9190610a8f565b6105cf565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018f610655565b61019960006106dc565b565b600181815481106101ab57600080fd5b906000526020600020016000915090508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff16905082565b6101fb610655565b80602001602081019061020e91906109dd565b67ffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610ad1565b67ffffffffffffffff16116102f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ea90610b81565b60405180910390fd5b80600001602081019061030691906109dd565b67ffffffffffffffff1660018080805490506103229190610bd0565b8154811061033357610332610c04565b5b9060005260206000200160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1611156103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039790610ca5565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190915081816103d49190610e09565b50507ff1c5613227525376c83485d5a7995987dcfcd90512b0de33df550d2469fba9d981600001602081019061040a91906109dd565b82602001602081019061041d91906109dd565b6001808054905061042e9190610e17565b60405161043d93929190610e53565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104796107a8565b60006001808054905061048c9190610bd0565b90505b60011561058e578267ffffffffffffffff16600182815481106104b5576104b4610c04565b5b9060005260206000200160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161161057b57600181815481106104fa576104f9610c04565b5b906000526020600020016040518060400160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250509150506105ca565b808061058690610e8a565b91505061048f565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190610eff565b60405180910390fd5b919050565b6105d7610655565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106495760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106409190610996565b60405180910390fd5b610652816106dc565b50565b61065d6107a0565b73ffffffffffffffffffffffffffffffffffffffff1661067b610448565b73ffffffffffffffffffffffffffffffffffffffff16146106da5761069e6107a0565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106d19190610996565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060400160405280600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061081b610816610811846107d6565b6107f6565b6107d6565b9050919050565b600061082d82610800565b9050919050565b600061083f82610822565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b600080fd5b6000819050919050565b61088881610875565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000602082840312156108c1576108c0610870565b5b60006108cf84828501610896565b91505092915050565b600067ffffffffffffffff82169050919050565b6108f5816108d8565b82525050565b600060408201905061091060008301856108ec565b61091d60208301846108ec565b9392505050565b600080fd5b60006040828403121561093f5761093e610924565b5b81905092915050565b60006040828403121561095e5761095d610870565b5b600061096c84828501610929565b91505092915050565b6000610980826107d6565b9050919050565b61099081610975565b82525050565b60006020820190506109ab6000830184610987565b92915050565b6109ba816108d8565b81146109c557600080fd5b50565b6000813590506109d7816109b1565b92915050565b6000602082840312156109f3576109f2610870565b5b6000610a01848285016109c8565b91505092915050565b610a13816108d8565b82525050565b604082016000820151610a2f6000850182610a0a565b506020820151610a426020850182610a0a565b50505050565b6000604082019050610a5d6000830184610a19565b92915050565b610a6c81610975565b8114610a7757600080fd5b50565b600081359050610a8981610a63565b92915050565b600060208284031215610aa557610aa4610870565b5b6000610ab384828501610a7a565b91505092915050565b600081519050610acb816109b1565b92915050565b600060208284031215610ae757610ae6610870565b5b6000610af584828501610abc565b91505092915050565b600082825260208201905092915050565b7f4e6f20617070656e6465642073657420696e2073657120636f72726573706f6e60008201527f64696e6720746f20636f6e66696727732073657420696e646578000000000000602082015250565b6000610b6b603a83610afe565b9150610b7682610b0f565b604082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bdb82610875565b9150610be683610875565b9250828203905081811115610bfe57610bfd610ba1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f43616e6e6f7420616464206e6577207365742077697468206c6f77657220626c60008201527f6f636b206e756d626572207468616e2070726576696f75730000000000000000602082015250565b6000610c8f603883610afe565b9150610c9a82610c33565b604082019050919050565b60006020820190508181036000830152610cbe81610c82565b9050919050565b60008135610cd2816109b1565b80915050919050565b60008160001b9050919050565b600067ffffffffffffffff610cfc84610cdb565b9350801983169250808416831791505092915050565b6000610d2d610d28610d23846108d8565b6107f6565b6108d8565b9050919050565b6000819050919050565b610d4782610d12565b610d5a610d5382610d34565b8354610ce8565b8255505050565b60008160401b9050919050565b60006fffffffffffffffff0000000000000000610d8a84610d61565b9350801983169250808416831791505092915050565b610da982610d12565b610dbc610db582610d34565b8354610d6e565b8255505050565b600081016000830180610dd581610cc5565b9050610de18184610d3e565b505050600081016020830180610df681610cc5565b9050610e028184610da0565b5050505050565b610e138282610dc3565b5050565b6000610e22826108d8565b9150610e2d836108d8565b9250828203905067ffffffffffffffff811115610e4d57610e4c610ba1565b5b92915050565b6000606082019050610e6860008301866108ec565b610e7560208301856108ec565b610e8260408301846108ec565b949350505050565b6000610e9582610875565b915060008203610ea857610ea7610ba1565b5b600182039050919050565b7f756e726561636861626c65000000000000000000000000000000000000000000600082015250565b6000610ee9600b83610afe565b9150610ef482610eb3565b602082019050919050565b60006020820190508181036000830152610f1881610edc565b905091905056fea2646970667358221220bd78209a7ca8b548d961b210ca06233244ac6696a96b1b6ea1da117e7f8e60f164736f6c63430008160033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/keyperset/CollatorConfigsList.sol:CollatorConfigsList",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10409,
        "contract": "contracts/keyperset/CollatorConfigsList.sol:CollatorConfigsList",
        "label": "collatorConfigs",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(CollatorConfig)10403_storage)dyn_storage"
      },
      {
        "astId": 10412,
        "contract": "contracts/keyperset/CollatorConfigsList.sol:CollatorConfigsList",
        "label": "addrsSeq",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AddrsSeq)10394"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(CollatorConfig)10403_storage)dyn_storage": {
        "base": "t_struct(CollatorConfig)10403_storage",
        "encoding": "dynamic_array",
        "label": "struct CollatorConfig[]",
        "numberOfBytes": "32"
      },
      "t_contract(AddrsSeq)10394": {
        "encoding": "inplace",
        "label": "contract AddrsSeq",
        "numberOfBytes": "20"
      },
      "t_struct(CollatorConfig)10403_storage": {
        "encoding": "inplace",
        "label": "struct CollatorConfig",
        "members": [
          {
            "astId": 10400,
            "contract": "contracts/keyperset/CollatorConfigsList.sol:CollatorConfigsList",
            "label": "activationBlockNumber",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 10402,
            "contract": "contracts/keyperset/CollatorConfigsList.sol:CollatorConfigsList",
            "label": "setIndex",
            "offset": 8,
            "slot": "0",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}